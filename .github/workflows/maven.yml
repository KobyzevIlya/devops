name: Java CI with Maven

env:
  DOCKER_IMAGE_TAG: kobyzevilya/testrep:latest

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"
          cache: maven
      - name: Build with Maven
        run: mvn -B package --file pom.xml
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: artifact.jar
          path: target/JavaNN-1.0-SNAPSHOT.jar
      - name: Upload to Google Drive
        uses: adityak74/google-drive-upload-git-action@main
        with:
          credentials: ${{ secrets.GOOGLE_DRIVE_CREDENTIALS }}
          filename: target/JavaNN-1.0-SNAPSHOT.jar
          folderId: ${{ secrets.folderId }}
          overwrite: "true"
          mirrorDirectoryStructure: "true"

  checkstyle:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dbelyaev/action-checkstyle@v0.7.4
        with:
          reporter: github-pr-check
          level: info

  docker:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Download Artifact
      uses: actions/download-artifact@v3
      with:
        name: artifact.jar
        path: target/
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: ${{ env.DOCKER_IMAGE_TAG }}
  
  deploy:
    needs: docker
    runs-on: self-hosted
    steps:
      - name: Pull Docker Image
        run: docker pull ${{ env.DOCKER_IMAGE_TAG }}
      - name: Run Docker Image
        run: docker run ${{ env.DOCKER_IMAGE_TAG }}
